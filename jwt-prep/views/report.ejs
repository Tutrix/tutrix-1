<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Generate a Report</title>
  <style>
    /* Global Styles */
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f5f5f5; /* Neutral light background */
      color: #333; /* Dark text for readability */
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    h1 {
      margin-bottom: 20px;
      color: #4b2a69; /* Deep lavender */
    }

    form {
      background: #ffffff; /* White form background */
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      width: 90%;
      max-width: 600px;
    }

    label {
      display: block;
      margin: 10px 0 5px;
      font-size: 14px;
      font-weight: bold;
    }

    select, textarea, button {
      width: 100%;
      margin-bottom: 15px;
      padding: 10px;
      font-size: 14px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    textarea {
      resize: vertical;
    }

    button {
      background-color: #6a0dad; /* Lavender button */
      color: white;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

    button:hover {
      background-color: #8a4eaf; /* Darker lavender */
      box-shadow: 0 4px 10px rgba(138, 78, 175, 0.3);
    }

    a {
      margin-top: 15px;
      text-decoration: none;
      color: white;
      background-color: #4b2a69; /* Deep lavender button */
      padding: 10px 20px;
      border-radius: 5px;
      font-size: 14px;
      display: inline-block;
      transition: background-color 0.3s ease, box-shadow 0.3s ease;
    }

    a:hover {
      background-color: #6a0dad; /* Hover effect */
      box-shadow: 0 4px 10px rgba(138, 78, 175, 0.3);
    }

    /* Responsive Design */
    @media screen and (max-width: 480px) {
      form {
        padding: 15px;
      }

      button, a {
        font-size: 14px;
      }
    }
  </style>
</head>
<body>
  <h1>Generate a Report</h1>
  
  <form action="/report" method="POST">
    <!-- Report Type Selection -->
    <label for="reportType">Select Report Type:</label>
    <select name="reportType" id="reportType" required>
      <option value="allTutors">All Tutors</option>
      <option value="allStudents">All Students</option>
      <option value="individualTutor">Individual Tutor</option>
      <option value="individualStudent">Individual Student</option>
    </select>
  
    <!-- Individual Selection Dropdown -->
    <div id="individualSelection" style="display: none;">
      <label for="individualId">Select Individual:</label>
      <select name="individualId" id="individualId"></select>
    </div>
  
    <!-- Report Content Textarea -->
    <label for="reportContent">Report Content:</label>
    <textarea id="reportContent" name="reportContent" rows="5" placeholder="Enter the content of your report here..." required></textarea>
  
    <!-- Submit Button -->
    <button type="submit">Generate Report</button>
  </form>
  
  <a href="/tasks">Go back to Actions</a>
  
  <script>
    document.getElementById('reportType').addEventListener('change', function() {
      const reportType = this.value;
      const individualSelection = document.getElementById('individualSelection');
      const individualDropdown = document.getElementById('individualId');
  
      // Show dropdown only for individual selections
      if (reportType === 'individualTutor' || reportType === 'individualStudent') {
        individualSelection.style.display = 'block';
  
        // Determine whether to fetch tutors or students
        const group = reportType === 'individualTutor' ? 'Tutor' : 'Student';
  
        // Fetch users from the backend API based on the group
        fetch('/users/' + group)
          .then(response => response.json())
          .then(users => {
            // Populate the dropdown with fetched users
            individualDropdown.innerHTML = ''; // Clear previous options
            users.forEach(user => {
              const option = document.createElement('option');
              option.value = user._id; // Assuming _id is unique
              option.textContent = `${user.name} (${user.email})`;
              individualDropdown.appendChild(option);
            });
          });
      } else {
        individualSelection.style.display = 'none'; // Hide dropdown if not individual selection
      }
    });
  </script>
</body>
</html>
